{"version":3,"sources":["assets/logfastlogo.png","src/ui/themes/app-theme.ts","src/ui/themes/ThemeProvider.tsx","src/pages/index.tsx","src/ui/components/inputs/Button/Button.style.tsx","src/ui/components/inputs/Button/Button.tsx","src/ui/components/inputs/Button/CheckBox.tsx","src/ui/components/inputs/Button/CheckBox.style.tsx","src/ui/components/box/viewStyled.tsx","src/ui/components/box/view.style.tsx","src/pages/searchItem.tsx","src/ui/components/inputs/TextInput/TextInput.style.tsx","src/ui/components/inputs/TextInput/TextInput.tsx","src/pages/itemDetail.tsx","src/ui/router/Router.tsx","App.tsx"],"names":["module","exports","AppTheme","DefaultTheme","colors","primary","accent","text","textSecondary","backdrop","background","surface","error","warning","success","grey","50","100","200","300","400","shape","borderRadius","spacing","size","NavigationTheme","NavigationDefaultTheme","card","border","ThemeProvider","children","theme","Index","View","Text","ButtonStyled","styled","Button","defaultProps","dark","uppercase","CheckBoxStyled","Checkbox","ViewStyled","SearchItem","navigation","useState","search","setSearch","suggestions","setSuggestionsList","selectedItem","setSelectedItem","checked","setChecked","useEffect","axios","get","params","item","preventiva","then","res","data","map","id","idSubInventario","title","descricao","console","log","style","flex","justifyContent","marginTop","flexDirection","alignItems","CheckBox","status","onPress","fontWeight","clearOnFocus","closeOnSubmit","dataSet","onChangeText","onSelectItem","textInputProps","placeholder","autoCorrect","autoCapitalize","paddingLeft","mode","navigate","itemId","TextInputStyled","TextInput","ItemDetail","route","getState","routes","setError","isLoaded","setIsLoaded","setItem","result","label","value","String","editable","endereco","estoque","custoUnitario","subInventario","Stack","createStackNavigator","Router","NavigationContainer","Navigator","Screen","name","component","options","headerTitleAlign","headerTitle","Image","width","height","resizeMode","source","Logo","headerStyle","backgroundColor","App"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,yC,yrBCG3C,I,EAAMC,EAAQ,OACTC,KADS,IAEZC,OAAO,EAAD,KACDD,IAAaC,QADZ,IAEJC,QAAS,UACTC,OAAQ,UACRC,KAAM,UACNC,cAAe,UACfC,SAAU,0BACVC,WAAY,OACZC,QAAS,UACTC,MAAO,UACPC,QAAS,UACTC,QAAS,UACTC,KAAM,CACJC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,aAGTC,MAAO,CACLC,aAAc,OAEhBC,QAzBY,WAyBe,IAAnBC,EAAkB,uDAAX,EACb,OAAc,EAAPA,EAAW,QAITC,EAAe,OACvBC,KADuB,IAE1BtB,OAAO,EAAD,KACDsB,IAAuBtB,QADtB,IAEJC,QAASH,EAASE,OAAOC,QACzBK,WAAYR,EAASE,OAAOM,WAC5BH,KAAML,EAASE,OAAOG,KACtBoB,KAAMzB,EAASE,OAAOM,WACtBkB,OAAQ1B,EAASE,OAAOW,KAAK,SAIlBb,I,kBC/BA2B,EARiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjC,OACE,kBAAC,IAAD,CAAiBC,MAAO7B,GACtB,kBAAC,IAAD,CAAe6B,MAAO7B,GAAW4B,K,yCCExBE,EARS,WACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gB,kDCHOC,EAAeC,YAAOC,IAAPD,CAAH,uHAEZ,qBAAGL,MAAkBR,QAAQ,OAGvB,qBAAGQ,MAAkBV,MAAMC,gBAG9Ca,EAAaG,aAAe,CAC1BC,MAAM,EACNC,WAAW,GCVEL,I,MAAAA,I,SCAAM,ECAeL,YAAOM,IAAPN,CAAH,uHAEd,qBAAGL,MAAkBR,QAAQ,OAGvB,qBAAGQ,MAAkBV,MAAMC,gBCL/BqB,ECAWP,YAAOH,IAAPG,CAAH,6EAEV,qBAAGL,MAAkBR,QAAQ,O,2BCoF3BqB,EAzE+B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC/C,EAAiCC,qBAAjC,WAAOC,EAAP,KAAeC,EAAf,KACA,EAA+CF,mBAAS,MAAxD,WAAOG,EAAP,KAAoBC,EAApB,KACA,EAA6CJ,qBAA7C,WAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8BN,oBAAS,GAAvC,WAAOO,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,qBAAU,WACRC,IACGC,IAAI,qDAAsD,CACzDC,OAAQ,CACNC,KAAMZ,EACNa,WAAYP,KAGfQ,MAAK,SAACC,GACL,IACMb,EADQa,EAAIC,KACQC,KAAI,SAACL,GAAD,MAAgB,CAC5CM,GAAIN,EAAKO,gBACTC,MAAOR,EAAKS,cAEdlB,EAAmBD,GACnBoB,QAAQC,IAAIrB,MAEhBoB,QAAQC,IAAIrB,KACX,CAACF,IAGF,kBAACd,EAAA,EAAD,CAAMsC,MAAO,CAAEC,KAAM,EAAGC,eAAgB,aAAcC,UAAW,KAC/D,kBAAC,EAAD,CAAYH,MAAO,CAAEI,cAAe,MAAOC,WAAY,WACrD,kBAACC,EAAD,CACEC,OAAQzB,EAAU,UAAY,YAC9B0B,QAAS,WACPzB,GAAYD,MAGhB,kBAACnB,EAAA,EAAD,CACEqC,MAAO,CAAES,WAAY,QACrBD,QAAS,WACPzB,GAAYD,KAHhB,wCASF,kBAAC,IAAD,CACE4B,cAAc,EACdC,eAAe,EACfC,QAASlC,EACTmC,aAAc,SAAC7E,GAAD,OAAUyC,EAAUzC,IAClC8E,aAAc,SAAC1B,GACbA,GAAQP,EAAgBO,EAAKM,KAE/BqB,eAAgB,CACdC,YAAa,mCACbC,aAAa,EACbC,eAAgB,OAChBlB,MAAO,CACLmB,YAAa,OAInB,kBAAC,EAAD,CACEC,KAAM,YACNZ,QAAS,WACPlC,EAAW+C,SAAS,aAAc,CAAEC,OAAQ1C,MAHhD,c,SC1EO2C,EAAkB1D,YAAO2D,IAAP3D,CAAH,4EAM5B0D,EAAgBxD,aAAe,CAC7BqD,KAAM,YCPOG,QCmFAE,EAtE+B,SAACC,EAAOpD,GACpD,IAAQgD,EAAgBI,EAAMpD,WAAWqD,WAAWC,OAAO,GAAGzC,OAAtDmC,OAER,EAA0B/C,mBAAS,MAAnC,WAAOlC,EAAP,KAAcwF,EAAd,KACA,EAAgCtD,oBAAS,GAAzC,WAAOuD,EAAP,KAAiBC,EAAjB,KACA,EAA6BxD,mBAAS,MAAtC,WAAOa,EAAP,KAAa4C,EAAb,KAuBA,OArBAhD,qBAAU,WACRC,IACGC,IAAI,6CAA8C,CACjDC,OAAQ,CACNC,KAAMkC,KAGThC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MACC,SAAC2C,GACCF,GAAY,GACZC,EAAQC,GACRnC,QAAQC,IAAIX,MAEd,SAAC/C,GACC0F,GAAY,GACZF,EAASxF,QAGd,IAECA,EACK,kBAACsB,EAAA,EAAD,cACGmE,EAIR,kBAACpE,EAAA,EAAD,CAAMsC,MAAO,CAAEC,KAAM,EAAGC,eAAgB,iBACtC,kBAAC,EAAD,CACEgC,MAAO,YACPC,MAAOC,OAAM,MAAChD,OAAD,EAACA,EAAMM,IACpB2C,UAAU,IAEZ,kBAAC,EAAD,CACEH,MAAO,kBACPC,MAAK,MAAE/C,OAAF,EAAEA,EAAMS,UACbwC,UAAU,IAEZ,kBAAC,EAAD,CACEH,MAAO,cACPC,MAAK,MAAE/C,OAAF,EAAEA,EAAMkD,SACbD,UAAU,IAEZ,kBAAC,EAAD,CACEH,MAAO,aACPC,MAAOC,OAAM,MAAChD,OAAD,EAACA,EAAMmD,SACpBF,UAAU,IAEZ,kBAAC,EAAD,CACEH,MAAO,YACPC,MAAK,MAAE/C,OAAF,EAAEA,EAAMoD,cACbH,UAAU,IAEZ,kBAAC,EAAD,CACEH,MAAO,mBACPC,MAAK,MAAE/C,OAAF,EAAEA,EAAMqD,cACbJ,UAAU,KAhCT,kBAAC1E,EAAA,EAAD,oB,kBCrCL+E,EAAQC,cA0DCC,EAlDU,WACvB,OACE,kBAACC,EAAA,EAAD,CAAqBrF,MAAON,GAC1B,kBAACwF,EAAMI,UAAP,KACE,kBAACJ,EAAMK,OAAP,CACEC,KAAM,aACNC,UAAW5E,EACX6E,QAAS,CACPC,iBAAkB,SAClBC,YAAa,kBACX,kBAACC,EAAA,EAAD,CACErD,MAAO,CACLsD,MAAO,IACPC,OAAQ,GACRC,WAAY,SAEdC,OAAQC,OAGZC,YAAa,CACXC,gBAAiB,cAIvB,kBAAClB,EAAMK,OAAP,CACEC,KAAM,aACNC,UAAWxB,EACXyB,QAAS,CACPC,iBAAkB,SAClBC,YAAa,kBACX,kBAACC,EAAA,EAAD,CACErD,MAAO,CACLsD,MAAO,IACPC,OAAQ,GACRC,WAAY,SAEdC,OAAQC,OAGZC,YAAa,CACXC,gBAAiB,cAIvB,kBAAClB,EAAMK,OAAP,CAAcC,KAAM,QAASC,UAAWxF,OC1DjC,SAASoG,IACtB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,S","file":"static/js/app.0ce1ad3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logfastlogo.54776055.png\";","import { DefaultTheme } from \"react-native-paper\";\nimport { DefaultTheme as NavigationDefaultTheme } from \"@react-navigation/native\";\n\nconst AppTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: \"#01236A\",\n    accent: \"#02E7D9\",\n    text: \"#707070\",\n    textSecondary: \"#9B9B9B\",\n    backdrop: \"rgba(107, 42, 238, .75)\",\n    background: \"#fff\",\n    surface: \"#fafafa\",\n    error: \"#FC3C00\",\n    warning: \"#FCA600\",\n    success: \"#00D34D\",\n    grey: {\n      50: \"#FAFAFA\",\n      100: \"#F0F0F0\",\n      200: \"#D7D9DD\",\n      300: \"#C4C4C4\",\n      400: \"#9B9B9B\",\n    },\n  },\n  shape: {\n    borderRadius: \"3px\",\n  },\n  spacing(size = 1): string {\n    return size * 8 + \"px\";\n  },\n};\n\nexport const NavigationTheme = {\n  ...NavigationDefaultTheme,\n  colors: {\n    ...NavigationDefaultTheme.colors,\n    primary: AppTheme.colors.primary,\n    background: AppTheme.colors.background,\n    text: AppTheme.colors.text,\n    card: AppTheme.colors.background,\n    border: AppTheme.colors.grey[300],\n  },\n};\n\nexport default AppTheme;\n","import React from \"react\";\nimport AppTheme from \"./app-theme\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { ThemeProvider as EmotionProvider } from \"@emotion/react\";\nimport { baseProps } from \"react-native-gesture-handler/lib/typescript/handlers/gestureHandlers\";\n\nconst ThemeProvider: React.FC = ({ children }) => {\n  return (\n    <EmotionProvider theme={AppTheme}>\n      <PaperProvider theme={AppTheme}>{children}</PaperProvider>\n    </EmotionProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\n\nconst Index: React.FC = () => {\n  return (\n    <View>\n      <Text>Index</Text>\n    </View>\n  );\n};\n\nexport default Index;\n","import styled from \"@emotion/native\";\nimport { Button } from \"react-native-paper\";\n\nexport const ButtonStyled = styled(Button)`\n  margin: 50px auto;\n  padding: ${({ theme }) => theme.spacing(0.5)};\n  width: 100%;\n  max-width: 200px;\n  border-radius: ${({ theme }) => theme.shape.borderRadius};\n`;\n\nButtonStyled.defaultProps = {\n  dark: true,\n  uppercase: false,\n};\n","import React from \"react\";\nimport { ButtonStyled } from \"./Button.style\";\n\nexport default ButtonStyled;\n","import React from \"react\";\nimport { CheckBoxStyled } from \"./CheckBox.style\";\n\nexport default CheckBoxStyled;\n","import styled from \"@emotion/native\";\nimport { Checkbox } from \"react-native-paper\";\n\nexport const CheckBoxStyled = styled(Checkbox)`\n  margin: 50px auto;\n  padding: ${({ theme }) => theme.spacing(0.5)};\n  width: 100%;\n  max-width: 200px;\n  border-radius: ${({ theme }) => theme.shape.borderRadius};\n`;\n","import React from \"react\";\nimport { ViewStyled } from \"./view.style\";\n\nexport default ViewStyled;\n","import styled from \"@emotion/native\";\nimport { View } from \"react-native\";\n\nexport const ViewStyled = styled(View)`\n  margin-bottom: 20px;\n  padding: ${({ theme }) => theme.spacing(0.5)};\n  width: 100%;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"ui/components/inputs/Button/Button\";\nimport CheckBox from \"ui/components/inputs/Button/CheckBox\";\nimport ViewStyled from \"ui/components/box/viewStyled\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { RootStackParamList } from \"ui/router/Router\";\nimport { AutocompleteDropdown } from \"react-native-autocomplete-dropdown\";\nimport axios from \"axios\";\n\ntype NavigationProp = StackNavigationProp<RootStackParamList, \"SearchItem\">;\n\ninterface SearchItemProps {\n  navigation: NavigationProp;\n}\n\nconst SearchItem: React.FC<SearchItemProps> = ({ navigation }) => {\n  const [search, setSearch]: any = useState();\n  const [suggestions, setSuggestionsList]: any = useState(null);\n  const [selectedItem, setSelectedItem]: any = useState();\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"https://logfast-api.herokuapp.com/api/search-itens\", {\n        params: {\n          item: search,\n          preventiva: checked,\n        },\n      })\n      .then((res) => {\n        const itens = res.data;\n        const suggestions = itens.map((item: any) => ({\n          id: item.idSubInventario,\n          title: item.descricao,\n        }));\n        setSuggestionsList(suggestions);\n        console.log(suggestions);\n      });\n    console.log(suggestions);\n  }, [search]);\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"flex-start\", marginTop: 10 }}>\n      <ViewStyled style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <CheckBox\n          status={checked ? \"checked\" : \"unchecked\"}\n          onPress={() => {\n            setChecked(!checked);\n          }}\n        />\n        <Text\n          style={{ fontWeight: \"bold\" }}\n          onPress={() => {\n            setChecked(!checked);\n          }}\n        >\n          Filtrar subinventário PREVENTIVA\n        </Text>\n      </ViewStyled>\n      <AutocompleteDropdown\n        clearOnFocus={false}\n        closeOnSubmit={false}\n        dataSet={suggestions}\n        onChangeText={(text) => setSearch(text)}\n        onSelectItem={(item) => {\n          item && setSelectedItem(item.id);\n        }}\n        textInputProps={{\n          placeholder: \"Digite a descrição do item\",\n          autoCorrect: false,\n          autoCapitalize: \"none\",\n          style: {\n            paddingLeft: 18,\n          },\n        }}\n      />\n      <Button\n        mode={\"contained\"}\n        onPress={() => {\n          navigation.navigate(\"ItemDetail\", { itemId: selectedItem });\n        }}\n      >\n        Ver Item\n      </Button>\n    </View>\n  );\n};\n\nexport default SearchItem;\n","import styled from \"@emotion/native\";\nimport { TextInput } from \"react-native-paper\";\n\nexport const TextInputStyled = styled(TextInput)`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 300px;\n`;\n\nTextInputStyled.defaultProps = {\n  mode: \"outlined\",\n};\n","import React from \"react\";\nimport { TextInputStyled } from \"./TextInput.style\";\n\nexport default TextInputStyled;\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"ui/components/inputs/Button/Button\";\nimport TextInputStyled from \"ui/components/inputs/TextInput/TextInput\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { RootStackParamList } from \"ui/router/Router\";\nimport axios from \"axios\";\nimport { useNavigation } from \"@react-navigation/core\";\n\ntype NavigationProp = StackNavigationProp<RootStackParamList, \"ItemDetail\">;\n\ninterface ItemDetailProps {\n  navigation: NavigationProp;\n  route: RootStackParamList;\n}\n\nconst ItemDetail: React.FC<ItemDetailProps> = (route, navigation) => {\n  const { itemId }: any = route.navigation.getState().routes[1].params;\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [item, setItem]: any = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"https://logfast-api.herokuapp.com/api/item\", {\n        params: {\n          item: itemId,\n        },\n      })\n      .then((res) => res.data)\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItem(result);\n          console.log(item);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <Text>Error</Text>;\n  } else if (!isLoaded) {\n    return <Text>Loading...</Text>;\n  } else {\n    return (\n      <View style={{ flex: 1, justifyContent: \"space-evenly\" }}>\n        <TextInputStyled\n          label={\"Código\"}\n          value={String(item?.id)}\n          editable={false}\n        />\n        <TextInputStyled\n          label={\"Descrição\"}\n          value={item?.descricao}\n          editable={false}\n        />\n        <TextInputStyled\n          label={\"Endereço\"}\n          value={item?.endereco}\n          editable={false}\n        />\n        <TextInputStyled\n          label={\"Quantidade\"}\n          value={String(item?.estoque)}\n          editable={false}\n        />\n        <TextInputStyled\n          label={\"Valor UND\"}\n          value={item?.custoUnitario}\n          editable={false}\n        />\n        <TextInputStyled\n          label={\"SubInventário\"}\n          value={item?.subInventario}\n          editable={false}\n        />\n      </View>\n    );\n  }\n};\n\nexport default ItemDetail;\n","import React from \"react\";\nimport { Image } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationTheme } from \"ui/themes/app-theme\";\nimport Index from \"pages\";\nimport SearchItem from \"pages/searchItem\";\nimport ItemDetail from \"pages/itemDetail\";\nimport Logo from \"@assets/logfastlogo.png\";\n\nconst Stack = createStackNavigator();\n\nexport type RootStackParamList = {\n  SearchItem: undefined;\n  ItemDetail: { itemId: number };\n  Index: {};\n};\n\nconst Router: React.FC = () => {\n  return (\n    <NavigationContainer theme={NavigationTheme}>\n      <Stack.Navigator>\n        <Stack.Screen\n          name={\"SearchItem\"}\n          component={SearchItem}\n          options={{\n            headerTitleAlign: \"center\",\n            headerTitle: () => (\n              <Image\n                style={{\n                  width: 150,\n                  height: 40,\n                  resizeMode: \"cover\",\n                }}\n                source={Logo}\n              ></Image>\n            ),\n            headerStyle: {\n              backgroundColor: \"#01236A\",\n            },\n          }}\n        />\n        <Stack.Screen\n          name={\"ItemDetail\"}\n          component={ItemDetail}\n          options={{\n            headerTitleAlign: \"center\",\n            headerTitle: () => (\n              <Image\n                style={{\n                  width: 150,\n                  height: 40,\n                  resizeMode: \"cover\",\n                }}\n                source={Logo}\n              ></Image>\n            ),\n            headerStyle: {\n              backgroundColor: \"#01236A\",\n            },\n          }}\n        />\n        <Stack.Screen name={\"Index\"} component={Index}></Stack.Screen>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport ThemeProvider from \"ui/themes/ThemeProvider\";\nimport Router from \"ui/router/Router\";\n\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <Router />\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}